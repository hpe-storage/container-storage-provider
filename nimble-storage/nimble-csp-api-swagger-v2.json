{
  "swagger": "2.0",
  "info": {
    "description": "This API, used by the HPE CSI driver, enables management of resources used for container workloads.\nIt is not intended for direct usage outside of the CSI driver but is provided here for documentation purposes.",
    "version": "1.1.0",
    "title": "csp",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/containers/v1",
  "tags": [
    {
      "name": "hosts"
    },
    {
      "name": "replication_partners"
    },
    {
      "name": "snapshot_groups"
    },
    {
      "name": "snapshots"
    },
    {
      "name": "tokens"
    },
    {
      "name": "volume_groups"
    },
    {
      "name": "volumes"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/hosts": {
      "get": {
        "tags": [
          "hosts"
        ],
        "summary": "Get all hosts used for container workloads",
        "description": "",
        "operationId": "getHosts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Host"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "hosts"
        ],
        "summary": "Create host",
        "description": "",
        "operationId": "createHost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Host"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Host"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "hosts"
        ],
        "summary": "Delete host",
        "description": "",
        "operationId": "deleteHostByUuid",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Host deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hosts/{id}": {
      "delete": {
        "tags": [
          "hosts"
        ],
        "summary": "Delete host",
        "description": "",
        "operationId": "deleteHostById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Host deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/replication_partners": {
      "get": {
        "tags": [
          "replication_partners"
        ],
        "summary": "Get all replication partners used for container workloads",
        "description": "",
        "operationId": "getReplicationPartners",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerReplicationPartner"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Replication partner name not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/snapshot_groups": {
      "get": {
        "tags": [
          "snapshot_groups"
        ],
        "summary": "Get all snapshot groups used for container workloads",
        "description": "",
        "operationId": "getSnapshotGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "volume_group_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SnapshotGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request if volume group ID is not provided"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "snapshot_groups"
        ],
        "summary": "Create a snapshot group",
        "description": "",
        "operationId": "createSnapshotGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SnapshotGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SnapshotGroup"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/snapshot_groups/{id}": {
      "get": {
        "tags": [
          "snapshot_groups"
        ],
        "summary": "Get a snapshot group with the given ID",
        "description": "",
        "operationId": "getSnapshotGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SnapshotGroup"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Snapshot group ID not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "snapshot_groups"
        ],
        "summary": "Delete a snapshot group",
        "description": "",
        "operationId": "deleteSnapshotGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Snapshot group deleted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Snapshot group ID not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/snapshots": {
      "get": {
        "tags": [
          "snapshots"
        ],
        "summary": "Get snapshots for the provided volume",
        "description": "",
        "operationId": "getSnapshots",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "volume_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerVolumeSnapshot"
              }
            }
          },
          "400": {
            "description": "Bad Request if volume group ID is not provided"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found if volume ID or snapshot name cannot be found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "snapshots"
        ],
        "summary": "Create a snasphot",
        "description": "",
        "operationId": "createSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContainerVolumeSnapshot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContainerVolumeSnapshot"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/snapshots/{id}": {
      "get": {
        "tags": [
          "snapshots"
        ],
        "summary": "Get a snapshot with the given ID",
        "description": "",
        "operationId": "getSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContainerVolumeSnapshot"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found if snapshot ID cannot be found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "snapshots"
        ],
        "summary": "Delete a snapshot",
        "description": "",
        "operationId": "deleteSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Snapshot deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found if snapshot ID is not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tokens/{id}": {
      "delete": {
        "tags": [
          "tokens"
        ],
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK logged out"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tokens": {
      "post": {
        "tags": [
          "tokens"
        ],
        "operationId": "createToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid username and/or password"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": []
      }
    },
    "/volume_groups": {
      "get": {
        "tags": [
          "volume_groups"
        ],
        "summary": "Get all volume groups used for container workloads",
        "description": "",
        "operationId": "getVolumeGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VolumeGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found if the volume group name cannot be found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "volume_groups"
        ],
        "summary": "Create a new volume group for container workloads",
        "description": "",
        "operationId": "createVolumeGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/volume_groups/{id}": {
      "get": {
        "tags": [
          "volume_groups"
        ],
        "summary": "Get the volume group with the given ID",
        "description": "",
        "operationId": "getVolumeGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VolumeGroup"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found if volume group ID cannot be found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "volume_groups"
        ],
        "summary": "Delete a volume group",
        "description": "",
        "operationId": "deleteVolumeGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Volume group deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found if volume group ID is not found"
          },
          "409": {
            "description": "Conflict if the volume group cannot be deleted"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/volumes": {
      "get": {
        "tags": [
          "volumes"
        ],
        "summary": "Get all volumes used for container workloads",
        "description": "",
        "operationId": "getVolumes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerVolume"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found if the volume name cannot be found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "volumes"
        ],
        "summary": "Create a new volume (or clone an existing snapshot/volume) for container workloads",
        "description": "",
        "operationId": "createVolume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContainerVolume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContainerVolume"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/volumes/{id}": {
      "get": {
        "tags": [
          "volumes"
        ],
        "summary": "Get the volume with the given ID",
        "description": "",
        "operationId": "getVolume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContainerVolume"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found if volume ID cannot be found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "volumes"
        ],
        "summary": "Edit the volume with the given ID",
        "description": "",
        "operationId": "editVolume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContainerVolume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContainerVolume"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found if volume ID cannot be found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "volumes"
        ],
        "summary": "Delete a volume",
        "description": "",
        "operationId": "deleteVolume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Volume deleted"
          },
          "400": {
            "description": "Bad Request if the volume is published"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found if volume ID is not found"
          },
          "409": {
            "description": "Conflict if the volume cannot be deleted"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/volumes/{id}/actions/publish": {
      "put": {
        "tags": [
          "volumes"
        ],
        "summary": "Publishes a volume to the given host",
        "description": "",
        "operationId": "publishVolume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PublishOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Volume published successfully",
            "schema": {
              "$ref": "#/definitions/PublishInfo"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found if volume ID or host UUID is not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/volumes/{id}/actions/unpublish": {
      "put": {
        "tags": [
          "volumes"
        ],
        "summary": "Unpublishes a volume to the given host",
        "description": "",
        "operationId": "unpublishVolume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UnpublishOptions"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Volume unpublished successfully",
            "schema": {
              "$ref": "#/definitions/PublishInfo"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found if volume ID or host UUID cannot be found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "x-auth-token",
      "in": "header"
    }
  },
  "definitions": {
    "Host": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "iqns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "wwpns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "chap_user": {
          "type": "string"
        },
        "chap_password": {
          "type": "string"
        }
      }
    },
    "ContainerReplicationPartner": {
      "type": "object",
      "properties": {
        "alive": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "repl_role": {
          "type": "string",
          "enum": [
            "upstream",
            "downstream",
            "none",
            "bi_directional"
          ]
        },
        "is_alive": {
          "type": "boolean"
        }
      }
    },
    "ContainerVolumeSnapshot": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/SnapshotConfig"
        },
        "volume_id": {
          "type": "string"
        },
        "volume_name": {
          "type": "string"
        },
        "creation_time": {
          "type": "integer",
          "format": "int64"
        },
        "ready_to_use": {
          "type": "boolean"
        }
      }
    },
    "SnapshotConfig": {
      "type": "object",
      "additionalProperties": {}
    },
    "SnapshotGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "snapshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerVolumeSnapshot"
          }
        },
        "config": {
          "$ref": "#/definitions/SnapshotGroupConfig"
        },
        "volume_group_id": {
          "type": "string"
        },
        "volume_group_name": {
          "type": "string"
        },
        "creation_time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SnapshotGroupConfig": {
      "type": "object",
      "properties": {
        "replicate": {
          "type": "boolean"
        },
        "is_complete": {
          "type": "boolean"
        },
        "repl_status": {
          "type": "string",
          "enum": [
            "fail",
            "in_progress",
            "pending",
            "complete"
          ]
        },
        "repl_complete_time": {
          "type": "integer",
          "format": "int64"
        },
        "repl_start_time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AccessToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "array_ip": {
          "type": "string"
        },
        "session_token": {
          "type": "string"
        },
        "creation_time": {
          "type": "integer",
          "format": "int64"
        },
        "expiry_time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ContainerVolume": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "clone": {
          "type": "boolean"
        },
        "published": {
          "type": "boolean"
        },
        "config": {
          "$ref": "#/definitions/VolumeConfig"
        },
        "base_snapshot_id": {
          "type": "string"
        },
        "volume_group_id": {
          "type": "string"
        }
      }
    },
    "VolumeConfig": {
      "type": "object",
      "additionalProperties": {}
    },
    "VolumeGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/VolumeGroupConfig"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerVolume"
          }
        },
        "creation_time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VolumeGroupConfig": {
      "type": "object",
      "properties": {
        "replication_partner": {
          "type": "string"
        },
        "protection_template": {
          "type": "string"
        }
      }
    },
    "PublishInfo": {
      "type": "object",
      "properties": {
        "serial_number": {
          "type": "string"
        },
        "target_names": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "access_protocol": {
          "type": "string",
          "enum": [
            "iscsi",
            "fc"
          ]
        },
        "lun_id": {
          "type": "integer",
          "format": "int64"
        },
        "discovery_ips": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PublishOptions": {
      "type": "object",
      "properties": {
        "host_uuid": {
          "type": "string"
        },
        "access_protocol": {
          "type": "string",
          "enum": [
            "iscsi",
            "fc"
          ]
        }
      }
    },
    "UnpublishOptions": {
      "type": "object",
      "properties": {
        "host_uuid": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ArrayIp": {
      "name": "x-array-ip",
      "in": "header",
      "description": "Used to identify which array the CSP should route the operation to",
      "required": false,
      "type": "string"
    }
  }
}